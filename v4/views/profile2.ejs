<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <link rel="stylesheet" href="./stylesheets/index.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="index.css">
    <title>version_3
    </title>
</head>
<style>
.feeds-container {
    background-color: #f5f5f5;
    padding: 2rem;
}

.cards {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.card {
    width: calc(33.33% - 1.5rem); /* Adjust the width as needed */
    margin-bottom: 1rem;
    display: flex;
    flex-direction: column;
    height: 19rem;
}

.card img {
    width: 100%;
    height: 100%; /* Set a fixed height (adjust as needed) */
    border-radius: 8px;
    object-fit: cover; /* Ensure the photo covers the container */
    margin-bottom: 1rem;
}

.card .card-content {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center content horizontally */
}

.card h1,
.card h4,
.card p {
    margin: 0;
    color: #333;
}

.card h1 {
    font-size: 1.7rem; /* Adjust font size as needed */
}

.card h4 {
    margin-top: 0.5rem;
    opacity: 0.7;
}

.card p {
    margin-top: 0.5rem;
}

.card a {
    color: #28a02c;
    text-decoration: none;
    display: inline-block;
    margin-top: 0.5rem;
}

.card a:hover {
    text-decoration: underline;
}
</style>
<body>
    <header class="header" id="header">
        <nav class="nav container">
            <a href="#" class="nav__logo">Delivery</a>

            <div class="nav__menu" id="nav-menu">
                <ul class="nav__list">
                    <li class="nav__item">
                        <a href="/profile2" class="nav__link active-link">HOME</a>
                    </li>
                    <li class="nav__item">
                        <a href="/feed" class="nav__link">FEED</a>
                    </li>
                    
                    <li class="nav__item">
                        <a href="/" class="nav__link">LOGOUT</a>
                    </li>

                    <i class='bx bx-toggle-left change-theme' id="theme-button"></i>
                </ul>
            </div>

            <div class="nav__toggle" id="nav-toggle">
                <i class='bx bx-grid-alt'></i>
            </div>
            
                <a href="http://localhost:2000/" target="_blank" class="nav__link button">ADD LOCATION</a>
            
            <a href="/Profile" class="button button__header">Profile</a>
        </nav>
    
        <div class="blr" id="blrone"></div>
        <div class="blr" id="blrtwo"></div>
        <div class="blr" id="blr4"></div>
        <div class="blr" id="blr3"></div>
    </header>
    <section class="home section" id="home">
        <div class="home__container container grid">
            <img src="../images/delivery1.png" alt="" style="height: 370px; width: 370px; position: relative;
            left: 25%;">
            <div class="home__data">
                <h1 class="home__title">Get Your Products <br> Faster Easier</h1>
                <p class="home__description">Order your favorite foods at any time and we will deliver them right to
                    where you are.</p> 
            </div>
        </div>
    </section>
  
    <section>
        <div class="feeds-container mt-8">
            <div class="cards flex flex-wrap gap-10">
                <% posts.forEach(function(elem){ %>
                    <div class="card">
                        <div class="w-full h-full bg-green-50 rounded-lg overflow-hidden">
                            <img class="w-full h-full object-cover" src="/images/uploads/<%= elem.image %>" alt="">
                        </div>
                        <div class="card-content">
                            <h1><%= elem.title %></h1>
                            <h4>BY: <%= elem.user.username %></h4>
                            <p>Price: <%= elem.price %></p>
                            <a href="/details/<%= elem._id %>">See details</a>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </section>
   
    

    

    

    <!--=============== FOOTER ===============-->
    <footer class="footer section">
       
        <p style="text-align: center;font-weight: bold; margin-top: 20px;">&copy; 2024 Delivery App. All rights
            reserved.</p>

        <p class="footer__copy">Team <span
                style="color: rgb(116, 0, 155); text-transform: capitalize; font-weight: bold; font-style: italic;">
                WebWeavers</span></a></p>
    </footer>

    <a href="#" class="scrollup" id="scroll-up">
        <i class='bx bx-up-arrow-alt scrollup__icon'></i>
    </a>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.3/gsap.min.js"></script>

    <script>
         
        /*=============== SHOW MENU ===============*/
            const showMenu = (toggleId, navId) => {
                const toggle = document.getElementById(toggleId),
                    nav = document.getElementById(navId)

                // Validate that variables exist
                if (toggle && nav) {
                    toggle.addEventListener('click', () => {
                        // We add the show-menu class to the div tag with the nav__menu class
                        nav.classList.toggle('show-menu')
                    })
                }
            }
            showMenu('nav-toggle', 'nav-menu')

            /*=============== REMOVE MENU MOBILE ===============*/
            const navLink = document.querySelectorAll('.nav__link')

            function linkAction() {
                const navMenu = document.getElementById('nav-menu')
                // When we click on each nav__link, we remove the show-menu class
                navMenu.classList.remove('show-menu')
            }
            navLink.forEach(n => n.addEventListener('click', linkAction))

            /*=============== SCROLL SECTIONS ACTIVE LINK ===============*/
            const sections = document.querySelectorAll('section[id]')

            function scrollActive() {
                const scrollY = window.pageYOffset

                sections.forEach(current => {
                    const sectionHeight = current.offsetHeight,
                        sectionTop = current.offsetTop - 50,
                        sectionId = current.getAttribute('id')

                    if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {
                        document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.add('active-link')
                    } else {
                        document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.remove('active-link')
                    }
                })
            }
            window.addEventListener('scroll', scrollActive)

            /*=============== CHANGE BACKGROUND HEADER ===============*/
            function scrollHeader() {
                const nav = document.getElementById('header')
                // When the scroll is greater than 80 viewport height, add the scroll-header class to the header tag
                if (this.scrollY >= 80) nav.classList.add('scroll-header'); else nav.classList.remove('scroll-header')
            }
            window.addEventListener('scroll', scrollHeader)

            /*=============== SHOW SCROLL UP ===============*/
            function scrollUp() {
                const scrollUp = document.getElementById('scroll-up');
                // When the scroll is higher than 560 viewport height, add the show-scroll class to the a tag with the scroll-top class
                if (this.scrollY >= 560) scrollUp.classList.add('show-scroll'); else scrollUp.classList.remove('show-scroll')
            }
            window.addEventListener('scroll', scrollUp)

            /*=============== DARK LIGHT THEME ===============*/
            const themeButton = document.getElementById('theme-button')
            const darkTheme = 'dark-theme'
            const iconTheme = 'bx-toggle-right'

            // Previously selected topic (if user selected)
            const selectedTheme = localStorage.getItem('selected-theme')
            const selectedIcon = localStorage.getItem('selected-icon')

            // We obtain the current theme that the interface has by validating the dark-theme class
            const getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'
            const getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'bx-toggle-left' : 'bx-toggle-right'

            // We validate if the user previously chose a topic
            if (selectedTheme) {
                // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark
                document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)
                themeButton.classList[selectedIcon === 'bx-toggle-left' ? 'add' : 'remove'](iconTheme)
            }

            // Activate / deactivate the theme manually with the button
            themeButton.addEventListener('click', () => {
                // Add or remove the dark / icon theme
                document.body.classList.toggle(darkTheme)
                themeButton.classList.toggle(iconTheme)
                // We save the theme and the current icon that the user chose
                localStorage.setItem('selected-theme', getCurrentTheme())
                localStorage.setItem('selected-icon', getCurrentIcon())
            })

            const editIcon = document.querySelector("#uploadicon");

editIcon.addEventListener("mouseover", function () {
    gsap.to(this, { scale: 1.1, duration: 0.3, ease: "power2.inOut" });
});

editIcon.addEventListener("mouseout", function () {
    gsap.to(this, { scale: 1, duration: 0.3, ease: "power2.inOut" });
});

editIcon.addEventListener("click", function () {
    document.querySelector("#uploadform input").click();
});

document.querySelector("#uploadform input").addEventListener("change", function () {
    document.querySelector("#uploadform").submit();
});
    </script>
</body>

</html>

