<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css">
    <link rel="stylesheet" href="../stylesheets/index.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <link
    href="https://cdn.jsdelivr.net/npm/remixicon@4.1.0/fonts/remixicon.css"
    rel="stylesheet"
/>
    <title>version_3
    </title>
</head>
<style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}
.chatbot-toggler {
  position: fixed;
  bottom: 30px;
  right: 35px;
  outline: none;
  border: none;
  height: 50px;
  width: 50px;
  display: flex;
  cursor: pointer;
  align-items: center;
  z-index: 100;
  justify-content: center;
  border-radius: 50%;
  background: #724ae8;
  transition: all 0.2s ease;
}
body.show-chatbot .chatbot-toggler {
  transform: rotate(90deg);
}
.chatbot-toggler span {
  color: #fff;
  position: absolute;
}
.chatbot-toggler span:last-child,
body.show-chatbot .chatbot-toggler span:first-child  {
  opacity: 0;
}
body.show-chatbot .chatbot-toggler span:last-child {
  opacity: 1;
}
.chatbot {
    position: fixed;
    right: 35px;
    bottom: 90px;
    height: 70vh;
    width: 330px;
    background: #4CAF50; /* Greenish theme */
    border-radius: 15px;
    overflow: hidden;
    opacity: 0;
    z-index: 1000;
    pointer-events: none;
    transform: scale(0.5);
    transform-origin: bottom right;
    box-shadow: 0 0 128px 0 rgba(0, 0, 0, 0.2), 0 32px 64px -48px rgba(0, 0, 0, 0.5);
    transition: all 0.1s ease;
  }
body.show-chatbot .chatbot {
  opacity: 1;
  pointer-events: auto;
  transform: scale(1);
}

.chatbot header {
    padding: 16px 0;
    position: relative;
    text-align: center;
    color: #fff;
    background: #4CAF50; /* Greenish theme */
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }
.chatbot header span {
  position: absolute;
  right: 15px;
  top: 50%;
  display: none;
  cursor: pointer;
  transform: translateY(-50%);
}
header h2 {
  font-size: 1.4rem;
}
.chatbot .chatbox {
  overflow-y: auto;
  height: 510px;
  padding: 30px 20px 100px;
}
.chatbot :where(.chatbox, textarea)::-webkit-scrollbar {
  width: 6px;
}
.chatbot :where(.chatbox, textarea)::-webkit-scrollbar-track {
  background: #fff;
  border-radius: 25px;
}
.chatbot :where(.chatbox, textarea)::-webkit-scrollbar-thumb {
  background: #ccc;
  border-radius: 25px;
}
.chatbox .chat {
  display: flex;
  list-style: none;
}
.chatbox .outgoing {
  margin: 20px 0;
  justify-content: flex-end;
}
.chatbox .incoming span {
    width: 32px;
    height: 32px;
    color: #fff;
    cursor: default;
    text-align: center;
    line-height: 32px;
    align-self: flex-end;
    background: #4CAF50; /* Greenish theme */
    border-radius: 4px;
    margin: 0 10px 7px 0;
  }
.chatbox .chat p {
  white-space: pre-wrap;
  padding: 12px 16px;
  border-radius: 10px 10px 0 10px;
  max-width: 75%;
  color: #fff;
  font-size: 0.95rem;
  background: #724ae8;
}
.chatbox .incoming p {
  border-radius: 10px 10px 10px 0;
}
.chatbox .chat p.error {
  color: #721c24;
  background: #f8d7da;
}
.chatbox .incoming p {
  color: #000;
  background: #f2f2f2;
}
.chatbot .chat-input {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: 5px;
  position: absolute;
  bottom: 0;
  width: 100%;
  background: #fff;
  padding: 3px 20px;
  border-top: 1px solid #ddd;
}
.chat-input textarea{
  height: 55px;
  width: 100%;
  border: none;
  outline: none;
  resize: none;
  max-height: 180px;
  padding: 15px 15px 15px 0;
  font-size: 0.95rem;
}
#span-btn{
  display: flex;
  align-self: flex-end;
  color: #724ae8;
  cursor: pointer;
  height: 55px;
  display: flex;
  position: absolute;
  z-index: 999;
  align-items: center;
  border: 2px solid purple;
  /* visibility: hidden; */
  font-size: 1.45rem;
}
.chat-input textarea:valid ~ span {
  visibility: visible;
}
.chat-input{
  padding: 2vh;

}
.chatbox .chat p,
  .chatbox .incoming p {
    white-space: pre-wrap;
    padding: 12px 16px;
    border-radius: 10px 10px 0 10px;
    max-width: 75%;
    font-size: 0.95rem;
  }
  .chat-input textarea {
  height: 55px;
  width: calc(100% - 50px); /* Adjusted width to leave space for the button */
  border: none;
  outline: none;
  resize: none;
  max-height: 180px;
  padding: 15px;
  font-size: 0.95rem;
  border-radius: 5px;
}

#span-btn {
  display: flex;
  align-items: center;
  color: #fff;
  cursor: pointer;
  height: 55px;
  padding: 0 15px;
  background: #4CAF50; /* Greenish theme */
  border: 2px solid #4CAF50; /* Greenish theme */
  border-radius: 4px;
  font-size: 1.2rem;
}

.chat-input textarea:valid ~ #span-btn {
  visibility: visible;
}

.chat-input {
  padding: 15px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #fff;
  border-top: 1px solid #ddd;
  border-bottom-left-radius: 15px;
  border-bottom-right-radius: 15px;
}

@media (max-width: 490px) {
  .chatbot-toggler {
    right: 20px;
    bottom: 20px;
  }
  .chatbot {
    right: 0;
    bottom: 0;
    height: 100%;
    border-radius: 0;
    width: 100%;
  }
  .chatbot .chatbox {
    height: 90%;
    padding: 25px 15px 100px;
  }
  .chatbot .chat-input {
    padding: 5px 15px;
  }
  .chatbot header span {
    display: block;
  }
}

</style>
<body>
    <header class="header" id="header">
        <nav class="nav container">
            <a href="#" class="nav__logo">Delivery</a>

            <div class="nav__menu" id="nav-menu">
                <ul class="nav__list">
                    <li class="nav__item">
                        <a href="#home" class="nav__link active-link">Home</a>
                    </li>
                    <li class="nav__item">
                        <a href="#about" class="nav__link">About us</a>
                    </li>
                    <li class="nav__item">
                        <a href="#services" class="nav__link">Services</a>
                    </li>
                    <li class="nav__item">
                        <a href="#contact" class="nav__link">Contact us</a>
                    </li>

                    <i class='bx bx-toggle-left change-theme' id="theme-button"></i>
                </ul>
            </div>

            <div class="nav__toggle" id="nav-toggle">
                <i class='bx bx-grid-alt'></i>
            </div>

            <a href="/reg_or_log" class="button button__header">Sell your product</a>
        </nav>
    </header>
    <section class="home section" id="home">
        <div class="home__container container grid">
            <img src="../images/delivery1.png" alt="">

            <div class="home__data">
                <h1 class="home__title">Order Products <br> Faster Easier</h1>
                <p class="home__description">Order your favorite foods at any time and we will deliver them right to
                    where you are.</p>

                <a href="/reg_or_log2" class="button">Buy Now</a>

            </div>
        </div>
    </section>
    <div id="scroller" class="scollanimation">
        <div id="scroller-in">
            <h4>FAST DELIVERY</h4> .
            <h4>SECURE PACKAGING</h4> .
            <h4>REAL-TIME TRACKING</h4> .
            <h4>CUSTOMER SATISFACTION</h4>
        </div>
        <div id="scroller-in">
            <h4>ON-TIME SERVICE</h4> .
            <h4>EXPRESS SHIPPING</h4> .
            <h4>SAFE HANDLING</h4> .
            <h4>RELIABLE COURIERS</h4>
        </div>
    </div>
    <!-- about us section -->
    <section class="about section container" id="about">
        <div class="about__container grid">
            <div class="about__data">
                <h2 class="section__title-center">Find Out A Little More <br> About Us</h2>
                <p class="about__description">We are a company dedicated to the distribution of products by delivery
                    to your home or to the place where you are, with the best quality of delivery.
                </p>
            </div>

            <img src="../images/aboutus.png" alt="">

        </div>
    </section>

    <!--=============== SECURITY ===============-->
    <section class="security section container">
        <div class="security__container grid">
            <div class="security__data">
                <h2 class="section__title-center">Your Safety Is <br> Important</h2>
                <p class="security__description">When your order reaches you, we have the health safety protocols,
                    so that you are protected from any disease. Watch the video of how the delivery is made.
                </p>
            </div>

            <img src="../images/seafty1.png" alt=""
            style="height: 240px; width: 240px;">
        </div>
    </section>

    <!--=============== SERVICES ===============-->
    <section class="services section container" id="services">
        <h2 class="section__title">Some Services We <br> Offer</h2>
        <div class="services__container grid">
            <div class="services__data">
                <h3 class="services__subtitle">Secure Payment</h3>
                <img src="../images/payment.png" alt="" class="service_img">
                <p class="services__description">Pay with Telebirr or atm card .</p>
                <div>
                </div>
            </div>

            <div class="services__data">
                <h3 class="services__subtitle">Find Your Product</h3>
                <img src="../images/search.png" alt="" class="service_img">

                <p class="services__description">We offer sale of products through the Internet.</p>
                <div>
                </div>
            </div>

            <div class="services__data">
                <h3 class="services__subtitle">Product Received</h3>
                <img src="../images/security.png" alt="" class="service_img">

                <p class="services__description">In our app you can see the delay time of your order.</p>
                <div>
                </div>
            </div>
        </div>
    </section>

   
    <section class="contact section container" id="contact">
        <div class="contact__container grid">
            <div class="contact__content">
                <h2 class="section__title-center">Contact Us From <br> Here</h2>
                <p class="contact__description">You can contact us from here, you can write to us,
                    call us or visit our service center, we will gladly assist you.</p>
            </div>

            <ul class="contact__content grid">
                <li class="contact__address">Telephone: <span class="contact__information">0000000000</span></li>
                <li class="contact__address">Email: <span class="contact__information">delivery@email.com</span></li>
                <li class="contact__address">Location: <span class="contact__information">Lorem ipsum dolor sit </span>
                </li>
            </ul>

            <div class="contact__content">
                <a href="#" class="button">Contact Us</a>
            </div>
        </div>
    </section>
    </main>

 <!-- chatbot -->
 <button class="chatbot-toggler">
    <span class="material-symbols-rounded"><i class="ri-chat-1-fill"></i></span>
    <span class="material-symbols-outlined">close</span>
  </button>
  <div class="chatbot">
    <header>
      <p>Hi there 👋<br>How can I help you today?</p>
      <span class="close-btn material-symbols-outlined">close</span>
    </header>
   
    <div id="chatbox"></div>
<div>
<input type="text" id="userInput" placeholder="Type your message...">
<button id="sendButton">Send</button>
</div>
  </div>

  <!-- chatbotend -->
    <footer class="footer section">
        
        <p style="text-align: center;font-weight: bold; margin-top: 20px;">&copy; 2024 Delivery App. All rights
            reserved.</p>

        <p class="footer__copy">Team <span
                style="color: rgb(116, 0, 155); text-transform: capitalize; font-weight: bold; font-style: italic;">
                WebWeavers</span></a></p>
    </footer>

    <a href="#" class="scrollup" id="scroll-up">
        <i class='bx bx-up-arrow-alt scrollup__icon'></i>
    </a>

    <script>
            const showMenu = (toggleId, navId) => {
                const toggle = document.getElementById(toggleId),
                    nav = document.getElementById(navId)

                // Validate that variables exist
                if (toggle && nav) {
                    toggle.addEventListener('click', () => {
                        // We add the show-menu class to the div tag with the nav__menu class
                        nav.classList.toggle('show-menu')
                    })
                }
            }
            showMenu('nav-toggle', 'nav-menu')

            /*=============== REMOVE MENU MOBILE ===============*/
            const navLink = document.querySelectorAll('.nav__link')

            function linkAction() {
                const navMenu = document.getElementById('nav-menu')
                // When we click on each nav__link, we remove the show-menu class
                navMenu.classList.remove('show-menu')
            }
            navLink.forEach(n => n.addEventListener('click', linkAction))

            const sections = document.querySelectorAll('section[id]')

            function scrollActive() {
                const scrollY = window.pageYOffset

                sections.forEach(current => {
                    const sectionHeight = current.offsetHeight,
                        sectionTop = current.offsetTop - 50,
                        sectionId = current.getAttribute('id')

                    if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {
                        document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.add('active-link')
                    } else {
                        document.querySelector('.nav__menu a[href*=' + sectionId + ']').classList.remove('active-link')
                    }
                })
            }
            window.addEventListener('scroll', scrollActive)

            /*=============== CHANGE BACKGROUND HEADER ===============*/
            function scrollHeader() {
                const nav = document.getElementById('header')
                // When the scroll is greater than 80 viewport height, add the scroll-header class to the header tag
                if (this.scrollY >= 80) nav.classList.add('scroll-header'); else nav.classList.remove('scroll-header')
            }
            window.addEventListener('scroll', scrollHeader)

            /*=============== SHOW SCROLL UP ===============*/
            function scrollUp() {
                const scrollUp = document.getElementById('scroll-up');
                // When the scroll is higher than 560 viewport height, add the show-scroll class to the a tag with the scroll-top class
                if (this.scrollY >= 560) scrollUp.classList.add('show-scroll'); else scrollUp.classList.remove('show-scroll')
            }
            window.addEventListener('scroll', scrollUp)

            /*=============== DARK LIGHT THEME ===============*/
            const themeButton = document.getElementById('theme-button')
            const darkTheme = 'dark-theme'
            const iconTheme = 'bx-toggle-right'

            // Previously selected topic (if user selected)
            const selectedTheme = localStorage.getItem('selected-theme')
            const selectedIcon = localStorage.getItem('selected-icon')

            // We obtain the current theme that the interface has by validating the dark-theme class
            const getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'
            const getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'bx-toggle-left' : 'bx-toggle-right'

            // We validate if the user previously chose a topic
            if (selectedTheme) {
                // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark
                document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)
                themeButton.classList[selectedIcon === 'bx-toggle-left' ? 'add' : 'remove'](iconTheme)
            }

            // Activate / deactivate the theme manually with the button
            themeButton.addEventListener('click', () => {
                // Add or remove the dark / icon theme
                document.body.classList.toggle(darkTheme)
                themeButton.classList.toggle(iconTheme)
                // We save the theme and the current icon that the user chose
                localStorage.setItem('selected-theme', getCurrentTheme())
                localStorage.setItem('selected-icon', getCurrentIcon())
            })

            // chatbot
            var flag=1;
const toggle = document.querySelector(".chatbot-toggler");
const chatbot = document.querySelector(".chatbot");

toggle.addEventListener("click", function () {
  document.body.classList.toggle("show-chatbot");
});
const chatbox = document.getElementById("chatbox");
    const userInput = document.getElementById("userInput");
    const sendButton = document.getElementById("sendButton");

    function appendMessage(sender, message) {
      chatbox.innerHTML += `<strong>${sender}:</strong> ${message}<br>`;
      chatbox.scrollTop = chatbox.scrollHeight;
    }

    function botResponse(query) {
      const lowerQuery = query.toLowerCase();

      if (lowerQuery.includes("hello") || lowerQuery.includes("hi")) {
        return "Hello there! How can I assist you today?";
      } else if (lowerQuery.includes("how are you")) {
        return "I'm just a bot, but thanks for asking!";
      } else if (lowerQuery.includes("information")) {
        return "Sure, what information are you looking for?";
      } else if (lowerQuery.includes("events")) {
        return "Check Out the Event Section of Website!";
      }else if (lowerQuery.includes("contact")) {
        return "You can contact us at 9110230197 or mail us: s.ravichandran6102003@gmail.com";
      } else if (lowerQuery.includes("bye")) {
        return "Goodbye! Have a great day!";
      } else if (lowerQuery.includes("registration")|| lowerQuery.includes("register")) {
        return "Go to the Registration Section and provide your details. An email will be sent if your registration is confirmed!";
      } else if (lowerQuery.includes("update")) {
        return "If you need to update your registration information, please contact us at 9110230197 or email us at s.ravichandran6102003@gmail.com";
      }else if (lowerQuery.includes("deadline")) {
        return "Yes, the registration deadline is available in the Events Section. Make sure to register before the deadline.";
      }else if (lowerQuery.includes("fee")||lowerQuery.includes("[payment")) {
        return "Yes, there might be a registration fee for some events. Check the Events Section for details.If so scan the QR code pay and share the payment details by replying to the mail we had sent!";
      }else if (lowerQuery.includes("cancellation")) {
        return "Yes, there might be a registration fee for some events. Check the Events Section for details.";
      }else if (lowerQuery.includes("thank you")) {
        return "You're welcome! It was my pleasure to assist you.!";
      }else if (lowerQuery.includes("team")) {
        return "Mail our team at s.ravichandran6102003@gmail.com to form teams of your choice text the complete details of your team members!";
      }
      else if (lowerQuery.includes("bye")) {
        return "Goodbye! Have a great day!";
      } else {
        return "I'm sorry, I don't understand that. Can you please rephrase? or Contact the team at  9110230197 / mail us: s.ravichandran6102003@gmail.com";
      }
    }

    function processUserInput() {
      const message = userInput.value.trim();
      if (message !== "") {
        appendMessage("You", message);
        userInput.value = "";

        const botReply = botResponse(message);
        setTimeout(() => appendMessage("Chatbot", botReply), 500);
      }
    }

    sendButton.addEventListener("click", processUserInput);

    userInput.addEventListener("keyup", function(event) {
      if (event.key === "Enter") {
        processUserInput();
      }
    });


    </script>
</body>

</html>

